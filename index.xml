<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jun's Blog</title><link>https://junmanbo.github.io/</link><description>Recent content on Jun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 16 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://junmanbo.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Theme Documentation - Basics</title><link>https://junmanbo.github.io/posts/theme-documentation-basics/</link><pubDate>Fri, 06 Mar 2020 21:29:01 +0800</pubDate><guid>https://junmanbo.github.io/posts/theme-documentation-basics/</guid><description>Gokarna is an opinionated theme with a focus on minimalism and simplicity.
Installation Follow these steps to initialize your new website.
If you are new to Hugo, we suggest following this great documentation for beginners.
a. Create Your Project Hugo provides a new subcommand to create a new website:
hugo new site my-website cd my-website b. Install the Theme The theme&amp;rsquo;s repository is: https://github.com/gokarna-theme/gokarna-hugo.
Make this repository a submodule of your Git project:</description></item><item><title>Theme Documentation - Advanced</title><link>https://junmanbo.github.io/posts/theme-documentation-advanced/</link><pubDate>Wed, 06 May 2020 21:29:01 +0800</pubDate><guid>https://junmanbo.github.io/posts/theme-documentation-advanced/</guid><description>Gokarna is an opinionated theme with a focus on minimalism and simplicity.
Content Types This theme supports two types of content types: post and page. To specify them, you need to add them in your markdown metadata.
Post This is the default blog post type which will be shown in your &amp;ldquo;Posts&amp;rdquo; section and who&amp;rsquo;s tags will be indexed. Basically, a normal blog post.
--- title: &amp;#34;Hello, world!&amp;#34; date: 2021-01-01 description: &amp;#34;A blog post&amp;#34; image: &amp;#34;/path/to/image.</description></item><item><title>기본 서버 보안 설정</title><link>https://junmanbo.github.io/posts/basic-server-sec/</link><pubDate>Tue, 21 Nov 2023 00:00:00 +0000</pubDate><guid>https://junmanbo.github.io/posts/basic-server-sec/</guid><description>서비스를 하다 보니 내 서버를 누가 털어가지 않을까 항상 걱정된다.
그래서 기초적인 보안 설정으로 서버에 접속하는걸 막아보고자 한다.
접속 log 확인 우선 누가 실제로 접속을 시도했는지 확인해 본다.
SSH 로그 확인 /var/log/auth.log 에서 서버에 접속한 기록들을 볼 수 있다. 접속시도한 내용 확인 grep sshd.*Did /var/log/auth.log | less 접속시도 했으나 실패한 내용 확인 grep sshd.Failed /var/log/auth.log | less 그런데 이미 누가 접속을 성공해서 내 서버를 마음대로 쓰고 있을 수 있기 때문에 실패한 걸로만 보고 방심하면 안 된다.</description></item><item><title>Markdown Syntax Guide</title><link>https://junmanbo.github.io/posts/markdown-syntax/</link><pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate><guid>https://junmanbo.github.io/posts/markdown-syntax/</guid><description>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.
Headings The following HTML &amp;lt;h1&amp;gt;—&amp;lt;h6&amp;gt; elements represent six levels of section headings. &amp;lt;h1&amp;gt; is the highest section level while &amp;lt;h6&amp;gt; is the lowest.
H1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo.</description></item><item><title>Emoji Support</title><link>https://junmanbo.github.io/posts/emoji-support/</link><pubDate>Thu, 01 Oct 2020 17:55:28 +0800</pubDate><guid>https://junmanbo.github.io/posts/emoji-support/</guid><description>Emoji can be enabled in a Hugo project in a number of ways.
The emojify function can be called directly in templates or Inline Shortcodes.
To enable emoji globally, set enableEmoji to true in your site configuration and then you can type emoji shorthand codes directly in content files.
These begin and end with a colon and include the code of an emoji:
Gone camping! {?:}tent: Be back soon. That is so funny!</description></item><item><title>Network Topology</title><link>https://junmanbo.github.io/posts/network-topology/</link><pubDate>Sun, 16 Feb 2025 21:46:13 +0900</pubDate><guid>https://junmanbo.github.io/posts/network-topology/</guid><description>네트워크 구성 방식에는 여러 가지가 있으며, 각 방식은 고유한 장단점을 가지고 있습니다. 주요 네트워크 구성 방식과 그들의 장단점을 그래프와 함께 설명드릴게요.
1. 스타형 (Star Topology) +----+ |Hub | +--+-+ | +------+------+ | | | +---+ +---+ +---+ |PC1| |PC2| |PC3| +---+ +---+ +---+ 장점:
중앙 허브 또는 스위치를 통해 모든 노드가 연결되어 있어 관리가 용이합니다. 중앙 장치에 문제가 없는 한 각 노드의 장애가 전체 네트워크에 영향을 미치지 않습니다. 새로운 장치를 추가하거나 제거하는 것이 간단합니다.</description></item><item><title>Nginx proxy 연결</title><link>https://junmanbo.github.io/posts/mattermost_nginx/</link><pubDate>Mon, 22 Jan 2024 16:41:55 +0900</pubDate><guid>https://junmanbo.github.io/posts/mattermost_nginx/</guid><description>Mattermost와 Nginx 연결 기본적으로 mattermost는 8065 port로 포팅된다.
여기에 도메인과 http를 연결하도록 config 파일을 만들어준다.
/etc/nginx/conf.d/mattermost.conf upstream에 server 주소와 server의 server_name의 도메인은 자신의 상황에 맞게 수정한다. upstream backend { server 10.10.10.2:8065; keepalive 32; } proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=mattermost_cache:10m max_size=3g inactive=120m use_temp_path=off; server { listen 80 default_server; server_name mattermost.example.com; return 301 https://$server_name$request_uri; } server { listen 443 ssl http2; server_name mattermost.example.com; http2_push_preload on; # Enable HTTP/2 Server Push ssl on; ssl_certificate /etc/letsencrypt/live/{domain-name}/fullchain.</description></item><item><title>Mattermost</title><link>https://junmanbo.github.io/posts/mattermost/</link><pubDate>Thu, 18 Jan 2024 15:46:28 +0900</pubDate><guid>https://junmanbo.github.io/posts/mattermost/</guid><description>Slack+Notion 을 하나로 Mattermost Mattermost 란? mattermost 는 slack 과 유사한 오픈소스 프로젝트로 채널별로 글을 남기거나 개인 메세지를 보낼 수 있다. 그리고 다양한 plugin을 지원한다. 여기에 focalboard라는 plugin이 있는데 이건 notion과 유사하다. 즉, slack 에서 쓰는 것 처럼 채널을 파서 관련된 프로젝트를 연결하여 문서화 할 수 있다. self-hosting이 가능하여 직접 구축하고 운영 가능하다. mattermost 설치 간단하게 도커로 배포할 수 있지만 여기서는 실행파일을 직접 받아와서 설치하는 방식으로 해본다. 최신 버전의 mattermost 프로그램 다운로드 + 압축 풀기 + 옮기기 + data 디렉토리 생성 wget https://releases.</description></item><item><title>Lorem Ipsum</title><link>https://junmanbo.github.io/posts/lorem-ipsum/</link><pubDate>Thu, 15 Apr 2021 23:39:49 +0530</pubDate><guid>https://junmanbo.github.io/posts/lorem-ipsum/</guid><description>Heading 1 &amp;ldquo;Lorem ipsum dolor sit amet, consectetaur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description></item><item><title>Blüdhaven</title><link>https://junmanbo.github.io/projects/bludhaven/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://junmanbo.github.io/projects/bludhaven/</guid><description>History Blüdhaven was a former whaling town, which was officially incorporated as a &amp;ldquo;Commonwealth&amp;rdquo; in 1912. The town had a generally poor socio-economic populace, owing in part to failed efforts to transform itself into a manufacturing and shipping center.</description></item><item><title>Hydra</title><link>https://junmanbo.github.io/projects/hydra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://junmanbo.github.io/projects/hydra/</guid><description>Motto Cut off one head, and two will take their place.</description></item><item><title>Tatooine</title><link>https://junmanbo.github.io/projects/tatooine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://junmanbo.github.io/projects/tatooine/</guid><description>A long time ago in a galaxy far, far away&amp;hellip;. A project was planned, but never completed.</description></item></channel></rss>